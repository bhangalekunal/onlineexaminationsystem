import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit, QueryList } from '@angular/core';
import { SidebarComponent } from "../sidebar.component";
import { SidebarSettingsComponent } from "../sidebar-settings.component";
export declare type position = 'all' | 'left' | 'top' | 'right' | 'bottom';
export declare class SidebarAccordionComponent implements AfterViewInit, OnInit, OnDestroy {
    private element;
    private cdRef;
    classNameSidebarAccordion: boolean;
    width: string;
    height: string;
    className: string;
    sidebarResizable: boolean;
    sidebarResizableBegin: EventEmitter<position>;
    sidebarResizableEnd: EventEmitter<position>;
    sidebarOpenedChange: EventEmitter<SidebarComponent>;
    sideBarSettingsList: QueryList<SidebarSettingsComponent>;
    private _sidebars;
    private _resizeSidebar;
    constructor(element: ElementRef, cdRef: ChangeDetectorRef);
    ngAfterViewInit(): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    _addSidebar(sidebar: SidebarComponent): void;
    _removeSidebar(sidebar: SidebarComponent): void;
    _isResizableGutter(position: position): boolean;
    _getClassName(position: position): string;
    _getStyle(position?: position): any;
    _onSidebarResizeBegin(position: position, e: MouseEvent): void;
    open(value: position, index?: number): void;
    close(value: position): void;
    onMouseMove: (e: MouseEvent) => void;
    onMouseUp: () => void;
    getSidebarIndex(sidebar: SidebarComponent): number;
    private sidebarToggle;
    private correctMaxSizeSidebars;
    private groupBy;
    private sidebarSubscribe;
    private sidebarUnsubscribe;
    private sidebarSettingsSubscribe;
    private sidebarSettingsUnsubscribe;
}
